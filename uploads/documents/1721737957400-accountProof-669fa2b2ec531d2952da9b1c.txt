PREENTREGA DOS:

º el GET debe poder recibir por query un LIMIT, un SORT y un query.
	El limit permitirá devolver sólo el nro de elementos solicitados, que por default es 10.
	El page permitirá devolver la pag que queremos buscar, que por default es 1.
	El query es el tipo de elemento a buscar (ver category), que por default es búsqueda general.
	el sort permite ordenar la búsqueda por precio ascendente o descendente.



º El GET deberá devolver un objeto con este formato:
	{
	status:success/error
	payload: Resultado de los productos solicitados
	totalPages: Total de páginas
	prevPage: Página anterior
	nextPage: Página siguiente
	page: Página actual
	hasPrevPage: Indicador para saber si la página previa existe
	hasNextPage: Indicador para saber si la página siguiente existe.
	prevLink: Link directo a la página previa (null si hasPrevPage=false)
	nextLink: Link directo a la página siguiente (null si hasNextPage=false)
	}


º Se deberá poder buscar productos por categoría o por disponibilidad (stock) y su ordenamiento por precio.


º Al router de los CARTS se deben agregar:
	DELETE api/carts/:cid/products/:pid - Que eliminará del carrito los productos seleccionados.
	PUT api/carts/:cid  - Que debe actualizar el carrito con un arreglo de productos.
	PUT api/carts/:cid/products/:pid - Que deberá poder actualizar sólo la cantidad de ejemplares de producto por cualquier cantidad desde el req.body
	DELETE api/carts/:cid - Que deberá eliminar todos los productos del carrito.


º Modificar la ruta /:cid para que al traer todos los productos, los traiga completos mediante un “populate”. De esta manera almacenamos sólo el Id, pero al solicitarlo podemos desglosar los productos asociados.


º Crear una vista en el router de views ‘/products’ para visualizar todos los productos con su respectiva paginación. 
Cada producto mostrado puede resolverse de dos formas:
	Contar con el botón de “agregar al carrito” directamente, sin necesidad de abrir una página adicional con los detalles del producto.


º Además, agregar una vista en ‘/carts/:cid (cartId) para visualizar un carrito específico, donde se deberán listar SOLO los productos que pertenezcan a dicho carrito. 

